MQTT-Hyperdash V.1.00
=====================

MQTT, the Message Queuing Telemetry Transport protocol is specially designed to
handle high bandwidth and low latency data transport and machine communication
for the Internet of Things (IoT). However, also the Graphicsl User Interfaces 
for the Internet of Things  should refelct this and must not be a performace
bottleneck. MQTT-Hyperdash tries to fullfill this.

The man machine interface MQTT Hyperdash is the interactive tool from which the
individual components of the IoT are controlled. In order to avoid
confusion and to minimize the learning time, the interface builds on ergonomic
and logical concepts which allow for an intuitive understanding of its
operation and of the operation of the devices it controls.

Virtual control panels (dashbords) allow users to operate on the graphical
representations of a large set of devices like switches, knobs, sliders, digital
and analog indicators, whose behaviour is equivalent to that of the real
instrumental devices.  

The connection with the MQTT brokers on the lower layers is automatic and
completely transparent. This way the implementation of a Cockpit for an 
any-scale complicated machine consisting of many (thousands of) devices can
be realized. Technically this has been possible for a long time, but 
standardization was missing, until now!



MQTT Hyperdash was inspired by following two publications: 

T. Götz, "Entwicklung und Inbetriebnahme eines verteilten 
Rechnerkontrollsystems zur Steuerung der Elektronen-Stretcher-Anlage ELSA, 
unter besonderer Berücksichtigung der Anforderungen des 
Nachbeschleunigungsbetriebes bis 3.5 GeV"
(German, about a distributed control system running on RISC workstations and 
VME based processors, combining control and realtime beam diagnostics in one 
homogeneous environment) BONN-IR-95-03 

and 

M. Picard, "Entwurf, Entwicklung und Inbetriebnahme eines verteilten 
Rechnerkontrollsystems zur Steuerung der Elektronen-Stretcher-Anlage ELSA, 
unter besonderer Berücksichtigung der Extraktion im Nachbeschleunigungsbetrieb 
bis 3.5 GeV"
(German, about a distributed control system running on RISC workstations 
and VME based processors, combining control and realtime beam diagnostics 
in one homogeneous environment) BONN-IR-95-01


If you are looking for new ideas how to improve MQTT-Hyperdash, (and if you  can
understand german,) I recommend  you read some chapters of these two phd theses.
They where visionary way back in 1995, and you will find many similarities with
the MQTT framework, developped (later) elsewhere.  Dashboards, rule engines,
naming conventions standardization of the user interface have been already
mentioned there, and not only mentioned, they were realized and implemented and
the complex accelerator machine of the University of Bonn was operated with that
control system for more than 20 years until now. 

If you are interested, here is a link:
https://www-elsa.physik.uni-bonn.de/Beschleuniger/control_system.html

Computers in the 1990s where slow compared to what we have today, but the
performace has already beeen great back then. And the concepts are still up to
date and state of the art in many areas for automation and control.

